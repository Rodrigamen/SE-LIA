# -*- coding: utf-8 -*-
"""funciones_transformacion_datos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y2xKMisA6gWY-mdWLQ84_bjyY8xy3GDz
"""

def extraer_top (celda):
    iter2 = celda.split(",")
    iter3 = iter2[0]
    iter4 = iter3.replace("<", "") and iter3.replace(">", "") and iter3.replace("{<", "")
    iter5 = iter4.split(":", 1)
    iter6 = iter5[1]
    iter7 = iter6.replace(">", "") and iter6.replace(" ", "") and iter6.replace("' '", "") 
    iter8 = iter7.split(":")
    iter9 = float(iter8[1])
    return iter9

def extraer_jungla (celda):
    iter2 = celda.split(",")
    iter3 = iter2[1]
    iter4 = iter3.replace("<", "") and iter3.replace(">", "")
    iter5 = iter4.split(":", 1)
    iter6 = iter5[1]
    iter7 = iter6.replace(">", "") and iter6.replace(" ", "") and iter6.replace("' '", "") 
    iter8 = iter7.split(":")
    iter9 = float(iter8[1])
    return iter9

def extraer_mid (celda):
    iter2 = celda.split(",")
    iter3 = iter2[2]
    iter4 = iter3.replace("<", "") and iter3.replace(">", "")
    iter5 = iter4.split(":", 1)
    iter6 = iter5[1]
    iter7 = iter6.replace(">", "") and iter6.replace(" ", "") and iter6.replace("' '", "") 
    iter8 = iter7.split(":")
    iter9 = float(iter8[1])
    return iter9

def extraer_adc (celda):
    iter2 = celda.split(",")
    iter3 = iter2[3]
    iter4 = iter3.replace("<", "") and iter3.replace(">", "")
    iter5 = iter4.split(":", 1)
    iter6 = iter5[1]
    iter7 = iter6.replace(">", "") and iter6.replace(" ", "") and iter6.replace("' '", "") 
    iter8 = iter7.split(":")
    iter9 = float(iter8[1])
    return iter9

def extraer_support (celda):
    iter2 = celda.split(",")
    iter3 = iter2[4]
    iter4 = iter3.replace("<", "") and iter3.replace(">", "") and iter3.replace("}", "")
    iter5 = iter4.split(":", 1)
    iter6 = iter5[1]
    iter7 = iter6.replace(">", "") and iter6.replace(" ", "") and iter6.replace("' '", "") 
    iter8 = iter7.split(":")
    iter9 = float(iter8[1])
    return iter9

def cutrez (data, col1, col2, col3, col4, col5, col6, val1, val2, val3, val4, val5):
  for i in data.index:
    if (data[col1][i]) > (data[col2][i]) and (data[col1][i]) > (data[col3][i]) and (data[col1][i]) > (data[col4][i]) and (data[col1][i]) > (data[col5][i]):
      data.loc[i, col6]=val1
    elif (data[col2][i]) > (data[col1][i]) and (data[col2][i]) > (data[col3][i]) and (data[col2][i]) > (data[col4][i]) and (data[col2][i]) > (data[col5][i]):
      data.loc[i, col6]=val2
    elif (data[col3][i]) > (data[col1][i]) and (data[col3][i]) > (data[col2][i]) and (data[col3][i]) > (data[col4][i]) and (data[col3][i]) > (data[col5][i]):
      data.loc[i, col6]=val3    
    elif (data[col4][i]) > (data[col1][i]) and (data[col4][i]) > (data[col2][i]) and (data[col4][i]) > (data[col3][i]) and (data[col4][i]) > (data[col5][i]):
      data.loc[i, col6]=val4
    elif (data[col5][i]) > (data[col1][i]) and (data[col5][i]) > (data[col2][i]) and (data[col5][i]) > (data[col3][i]) and (data[col5][i]) > (data[col4][i]):
      data.loc[i, col6]=val5

def play_rate_total (data, col1, col2, col3, col4, col5, col6):
  for i in data.index:
    data.loc[i, col1] = campeones.loc[i, col2] + campeones.loc[i, col3] + campeones.loc[i, col4] + campeones.loc[i, col5] + campeones.loc[i, col6]

def incremento (celda):
  valor = celda * 17
  return valor

def totales (base, incremento):
  for ir in range (0, 145):
    total = base + incremento
    return total