# -*- coding: utf-8 -*-
"""Funciones API.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eKTvz3pm1iSByLSRb3SdA2ybpHcGxcE_
"""

def get_champions():
  champions = champions(region="EUW")
  for champion in champions:
    print(champion.name, champion.id)

'''Extracción inicial de campeones de la API de Riot. Solo seleccionamos la región y sacamos el nombre y el ID de cada campeón para ver qué nos devuelve de forma inicial. Sin parámetros de entrada'''        

def extraer_campeones (lista, dicc):
  for campeon in lista:
    name_ = Champion(name = campeon, region="EUW")

    if len(name_.name) == 0:
      dicc["Nombre"].append("NS/NC")
    else:
      dicc["Nombre"].append(name_.name)

    if len(str(name_.id)) == 0:
      dicc["ID"].append("NS/NC")
    else:      
      dicc["ID"].append(name_.id) 

    if len(str(name_.info.difficulty)) == 0:
      dicc["Dificultad"].append("NS/NC")
    else:      
      dicc["Dificultad"].append(name_.info.difficulty)   

    if len(str(name_.info.attack)) == 0:
      dicc["AD"].append("NS/NC")
    else:      
      dicc["AD"].append(name_.info.attack)   

    if len(str(name_.info.defense)) == 0:
      dicc["Defensa"].append("NS/NC")
    else:      
      dicc["Defensa"].append(name_.info.defense)    

    if len(str(name_.info.magic)) == 0:
      dicc["AP"].append("NS/NC")
    else:      
      dicc["AP"].append(name_.info.magic) 

    if len(str(name_.passive.name)) == 0:
      dicc["Pasiva"].append("NS/NC")
    else:      
      dicc["Pasiva"].append(name_.passive.name)

    if len(str(name_.win_rates)) == 0:
      dicc["Win Rate"].append("NS/NC")
    else:      
      dicc["Win Rate"].append(name_.win_rates)
  
    if len(str(name_.play_rates)) == 0:
      dicc["Play Rate"].append("NS/NC")
    else:      
      dicc["Play Rate"].append(name_.play_rates)   
    
    if len(str(name_.ban_rates)) == 0:
      dicc["Ban Rate"].append("NS/NC")
    else:      
      dicc["Ban Rate"].append(name_.ban_rates)

'''Extraemos los datos e información que necesitamos de cada campeón desde la API de Riot. Para ello, para cada dato a extraer, vamos preguntado si es un valor vacío o no, de forma que añada "NS/NC" en caso de ser así o que extraiga el valor correspondiente en caso de existir. Así nos aseguramos de que no nos de error la API en caso de ir a devolver un valor vacío o no existir. Una vez pasamos esta disyuntiva, agregamos el valor correspondiente a cada key del diccionario vacío que hemos creado previamente y que nos permitirá general el dataframe que necesitamos a posteriori. Como parámetros de entrada tenemos la lista por la cual vamos a iterar y el diccionario al cual vamos a appendear los valores extraídos desde la API'''